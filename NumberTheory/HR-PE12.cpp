#include <iostream>
#include <vector>
using namespace std;
long long triangle(long long n)
{
    return ((n + 1) * n) / 2;    
}

// Math fact: a prime decomposition n = Prod_i p_i^e_i yields
// Prod_i (e_i + 1) different divisors
long long num_divisors(long long n)
{
    long long divisors = 1;  // 1 has one divisor
    {
        long long f = 2;
        long long count = 0;
        while (n % f == 0) {
            ++count;
            n /= f;     // divide by factor of 2
        }
        divisors *= (count + 1);
    }
    
    // <= n guarantees that a prime has 2 divisors
    for (long long f = 3; f <= n; f += 2) {
        long long count = 0;
        while (n % f == 0) {
            ++count;
            n /= f;     // divide by odd factor
        }
        divisors *= (count + 1);
    }
    return divisors;
}

long long unique_divisors(long long n)
{
    if (n % 2 == 0)
        n /= 2;
    return num_divisors(n);
}

// triangle(n) = (n + 1) * n / 2
// only one of them has a factor of two, and they have no prime factors in common
// we can cache one of the divisor counts while iterating over triangle numbers
long long first_triangle_with_more_than_n_divisors(long long n)
{
    long long i = 1;
    for (long long f1 = unique_divisors(i), f2 = unique_divisors(i + 1); f1 * f2 <= n; ++i) {
        f1 = f2;                        // re-use result from previous iteration
        f2 = unique_divisors(i + 2);    // only one new computation
    }
    return i;
}

int main()
{
    
    //std::ios_base::sync_with_stdio(false);
    //cin.tie(0);
    long long t;
    //cin>>t;
    //std::vector<long long> v;
    int a[1000] = {2, 3, 3, 7, 7, 8, 8, 8, 15, 15, 15, 15, 15, 15, 15, 24, 24, 32, 32, 35, 35, 35, 35, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 80, 80, 80, 80, 104, 104, 104, 104, 104, 104, 104, 104, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 384, 384, 384, 384, 384, 384, 384, 384, 384, 384, 384, 384, 384, 384, 384, 384, 384, 384, 384, 384, 384, 384, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 935, 935, 935, 935, 935, 935, 935, 935, 935, 935, 935, 935, 935, 935, 935, 935, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1664, 1664, 1664, 1664, 1664, 1664, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 5984, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 12375, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 14399, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 21735, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040, 41040 
}
    //cout<<endl;
    //cout<<"ffd";
    while(t--)
    {
        long long n;
        cin>>n;
        std::cout << triangle(a[n-1]) << "\n";
    }
    
}
